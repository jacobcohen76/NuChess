package nuchess.ui.root.view;

import javax.swing.JDialog;

import nuchess.player.human.Human;

public class HumanConstructorDialog extends JDialog
{
	private static final long serialVersionUID = 6284260120942362671L;
	
	private ContentPanel contentPanel;
	private Human human;
	private int side;
	
	protected GameConstructorDialog gcd;
	
	public HumanConstructorDialog(int side)
	{
		this.side = side;
		contentPanel = new ContentPanel();
		human = new Human("");
		
		gcd = null;
		
		add(contentPanel);
		pack();
		setResizable(false);
	}
	
	public void setUsernameText(String usernameText)
	{
		human.changeUsername(usernameText);
		contentPanel.setUsernameText(usernameText);
	}
	
	public Human getHuman()
	{
		human.changeUsername(contentPanel.getUsernameText());
		return human;
	}
	
	private void hideDialog()
	{
		setVisible(false);
	}
	
	/**
	 *
	 * @author Jacob Cohen
	 */
	private class ContentPanel extends javax.swing.JPanel {

		private static final long serialVersionUID = 8343179952573441566L;
		
		/**
	     * Creates new form NewJPanel2
	     */
	    public ContentPanel() {
	        initComponents();
	    }

	    /**
	     * This method is called from within the constructor to initialize the form.
	     * WARNING: Do NOT modify this code. The content of this method is always
	     * regenerated by the Form Editor.
	     */
	    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
	    private void initComponents() {

	        usernameTextField = new javax.swing.JTextField();
	        confirmButton = new javax.swing.JButton();
	        usernameLabel = new javax.swing.JLabel();

	        usernameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
	        	public void keyPressed(java.awt.event.KeyEvent evt) {
	                usernameTextFieldKeyPressed(evt);
	            }
	        	
	            public void keyTyped(java.awt.event.KeyEvent evt) {
	                usernameTextFieldKeyTyped(evt);
	            }
	        });

	        confirmButton.setText("Confirm");
	        confirmButton.addActionListener(new java.awt.event.ActionListener() {
	            public void actionPerformed(java.awt.event.ActionEvent evt) {
	                confirmButtonActionPerformed(evt);
	            }
	        });

	        usernameLabel.setText("Username");

	        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
	        this.setLayout(layout);
	        layout.setHorizontalGroup(
	            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
	                .addContainerGap()
	                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
	                    .addComponent(confirmButton, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
	                    .addGroup(layout.createSequentialGroup()
	                        .addComponent(usernameLabel)
	                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                        .addComponent(usernameTextField)))
	                .addContainerGap())
	        );
	        layout.setVerticalGroup(
	            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addContainerGap()
	                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
	                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
	                    .addComponent(usernameLabel))
	                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                .addComponent(confirmButton)
	                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
	        );
	    }// </editor-fold>                        

	    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt)
	    {
	    	hideDialog();
	    	gcd.setPlayer(side, getHuman());
	    }                                             

	    private void usernameTextFieldKeyTyped(java.awt.event.KeyEvent evt) {                                           
	        // TODO add your handling code here:
	        if(!isValidUsernameCharacter(evt.getKeyChar()))
	        {
	            evt.consume();
	        }
	    }
	    
	    private void usernameTextFieldKeyPressed(java.awt.event.KeyEvent evt)
	    {
	        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)
	        {
		    	hideDialog();
		    	gcd.setPlayer(side, getHuman());
	        }
	    }

	    private boolean isValidUsernameCharacter(char ch)
	    {
	        return true;
	    }
	    
	    public void setUsernameText(String usernameText)
	    {
	    	usernameTextField.setText(usernameText);
	    }
	    
	    public String getUsernameText()
	    {
	    	return usernameTextField.getText();
	    }

	    // Variables declaration - do not modify                     
	    private javax.swing.JButton confirmButton;
	    private javax.swing.JLabel usernameLabel;
	    private javax.swing.JTextField usernameTextField;
	    // End of variables declaration                   
	}
}
